
import java.sql.Connection;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
public class ÇalışanlarEkranı extends javax.swing.JDialog {
    
    DefaultTableModel model = new DefaultTableModel();
    Çalışanİşlemleri çalışanİşlemleri = new Çalışanİşlemleri();
    Statement statement = null;
    Connection con = null;
    int id = 0;
    int değer = 0;
    
    /**
     * Creates new form ÇalışanlarEkranı
     */
    public ÇalışanlarEkranı(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel)çalışanEkranı.getModel();
        çalışanGörüntüle();  // ekran açılınca direk bilgiler gelsin diye burada çağırdık
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        çalışanEkranı = new javax.swing.JTable();
        Arama_Çubuğu = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eklenecek_ad = new javax.swing.JTextField();
        eklenecek_soyad = new javax.swing.JTextField();
        eklenecek_departman = new javax.swing.JTextField();
        eklenecek_maaş = new javax.swing.JTextField();
        mesaj_yazısı = new javax.swing.JLabel();
        ekle_butonu = new javax.swing.JButton();
        güncelle_buton = new javax.swing.JButton();
        sil_butonu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(550, 200, 0, 0));

        çalışanEkranı.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "ad", "soyad", "departman", "maas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        çalışanEkranı.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                çalışanEkranıMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(çalışanEkranı);
        if (çalışanEkranı.getColumnModel().getColumnCount() > 0) {
            çalışanEkranı.getColumnModel().getColumn(0).setResizable(false);
            çalışanEkranı.getColumnModel().getColumn(1).setResizable(false);
            çalışanEkranı.getColumnModel().getColumn(2).setResizable(false);
            çalışanEkranı.getColumnModel().getColumn(3).setResizable(false);
            çalışanEkranı.getColumnModel().getColumn(4).setResizable(false);
        }

        Arama_Çubuğu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Arama_ÇubuğuKeyReleased(evt);
            }
        });

        jLabel1.setText("Ad:");

        jLabel2.setText("Soyad:");

        jLabel3.setText("Departman:");

        jLabel4.setText("Maaş:");

        ekle_butonu.setText("Ekle");
        ekle_butonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekle_butonuActionPerformed(evt);
            }
        });

        güncelle_buton.setText("Güncelle");
        güncelle_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                güncelle_butonActionPerformed(evt);
            }
        });

        sil_butonu.setText("Sil");
        sil_butonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sil_butonuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Arama_Çubuğu, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(mesaj_yazısı, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eklenecek_maaş, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eklenecek_departman, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eklenecek_ad, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(61, 61, 61)
                                .addComponent(eklenecek_soyad, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ekle_butonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(güncelle_buton, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(sil_butonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Arama_Çubuğu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesaj_yazısı))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(eklenecek_ad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sil_butonu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(eklenecek_soyad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ekle_butonu))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(eklenecek_departman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(güncelle_buton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eklenecek_maaş, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Arama_ÇubuğuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Arama_ÇubuğuKeyReleased
        // klavyeden giriş işimiz bittiği zaman direk bu metod tetiklenecek
        String aranan = Arama_Çubuğu.getText();
        
        dinamikArama(aranan);
        
    }//GEN-LAST:event_Arama_ÇubuğuKeyReleased

    private void ekle_butonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekle_butonuActionPerformed
        
        String ad = eklenecek_ad.getText();
        String soyad = eklenecek_soyad.getText();
        String departman = eklenecek_departman.getText();
        String maaş = eklenecek_maaş.getText();
        
        çalışanİşlemleri.çalışanEkle(ad, soyad, departman, maaş);
        
        çalışanGörüntüle();
        
        eklenecek_ad.setText("");
        eklenecek_soyad.setText("");
        eklenecek_departman.setText("");
        eklenecek_maaş.setText("");
        
        mesaj_yazısı.setText("Çalışan Personel Başarılı Bir Şekilde Kaydedildi....");
        
    }//GEN-LAST:event_ekle_butonuActionPerformed

    private void çalışanEkranıMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_çalışanEkranıMouseClicked
        
        this.değer = çalışanEkranı.getSelectedRow();
        this.id = (int)model.getValueAt(değer, 0);
        
        eklenecek_ad.setText(String.valueOf(model.getValueAt(değer, 1)));
        eklenecek_soyad.setText(String.valueOf(model.getValueAt(değer, 2)));
        eklenecek_departman.setText(String.valueOf(model.getValueAt(değer, 3)));
        eklenecek_maaş.setText(String.valueOf(model.getValueAt(değer, 4)));                    
        
    }//GEN-LAST:event_çalışanEkranıMouseClicked

    private void güncelle_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_güncelle_butonActionPerformed
        
        String ad = eklenecek_ad.getText();
        String soyad = eklenecek_soyad.getText();
        String departman = eklenecek_departman.getText();
        String maaş = eklenecek_maaş.getText();
        
        if(this.değer == -1){
            if(model.getRowCount() == 0){
                mesaj_yazısı.setText("Çalışanlar Tablosu Boş...");
            }
            else{
                mesaj_yazısı.setText("Lütfen Güncellenecek Çalışan Seçin....");
            }
        }
        else{         
            çalışanİşlemleri.çalışanGüncelle(id,ad,soyad,departman,maaş);
            mesaj_yazısı.setText("Çalışan Personel Başarılı Bir Şekilde Güncellendi...");
            çalışanGörüntüle();
        }
        
    }//GEN-LAST:event_güncelle_butonActionPerformed

    private void sil_butonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sil_butonuActionPerformed
        
        String ad = eklenecek_ad.getText();
        String soyad = eklenecek_soyad.getText();
        String departman = eklenecek_departman.getText();
        String maaş = eklenecek_maaş.getText();
        
        if(değer == -1){
            if(model.getRowCount() == 0){
                mesaj_yazısı.setText("Çalışanlar Tablosu Boş...");
            }
            else{
                mesaj_yazısı.setText("Lütfen Silinecek Çalışan Seçin");
            }
        }
        else{
            çalışanİşlemleri.çalışanSil(this.id);
            eklenecek_ad.setText("");
            eklenecek_soyad.setText("");
            eklenecek_departman.setText("");
            eklenecek_maaş.setText("");
            mesaj_yazısı.setText("Çalışan Personel Başarılı Bir Şekilde Silindi...");
            çalışanGörüntüle();
        }
        
    }//GEN-LAST:event_sil_butonuActionPerformed

    public void dinamikArama(String aranan){
        
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(model);
        çalışanEkranı.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(aranan));
        
    }
    
    /**
     * @param args the command line arguments
     */
    
    public void çalışanGörüntüle(){
        
        model.setRowCount(0);
        ArrayList<Çalışan> çalışanlar = çalışanİşlemleri.çalışanGetir();
        
        if(çalışanlar != null){
            for(Çalışan x : çalışanlar){
                Object[] veri = {x.getId(),x.getAd(),x.getSoyad(),x.getDepartman(),x.getMaas()};
                model.addRow(veri);
            }
        }
        else{
            
        }
    }   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ÇalışanlarEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ÇalışanlarEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ÇalışanlarEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ÇalışanlarEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ÇalışanlarEkranı dialog = new ÇalışanlarEkranı(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Arama_Çubuğu;
    private javax.swing.JButton ekle_butonu;
    private javax.swing.JTextField eklenecek_ad;
    private javax.swing.JTextField eklenecek_departman;
    private javax.swing.JTextField eklenecek_maaş;
    private javax.swing.JTextField eklenecek_soyad;
    private javax.swing.JButton güncelle_buton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel mesaj_yazısı;
    private javax.swing.JButton sil_butonu;
    private javax.swing.JTable çalışanEkranı;
    // End of variables declaration//GEN-END:variables
}
